{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>Welcome to BankAxept's documentation.</p> <ul> <li>Getting Started with BankAxept DES Platform</li> <li>DES API</li> </ul>"},{"location":"api_policy/","title":"API Design guidlines","text":""},{"location":"api_policy/#time","title":"Time","text":"<p>All API elements must specify time using UTC.</p>"},{"location":"api_policy/#versioning","title":"Versioning","text":"<p>While this API is not versioned in the URI this following scheme should be expected in case of future changes and updates.</p> <ul> <li>Major version: This version will be used in the URI, like <code>/v2/</code>, and indicates breaking changes to the API. Internally, the URI is utilized to route to the   correct internal execution.</li> <li>Minor and Patch versions: These versions remain transparent in the API and are used internally for backward-compatible additions and updates.</li> </ul> <p>Diverging from the above versioning scheme requires approval from all integrators.</p>"},{"location":"api_policy/#api-lifecycle","title":"API Lifecycle","text":"<p>We strive to keep our API backwards compatible in order to minimize the impact on our integrators. The following changes are considered backwards compatible.</p>"},{"location":"api_policy/#expanding-a-request-with-an-optional-field","title":"Expanding a request with an optional field.","text":"<p>As long as a field is optional it is considered backwards compatible to add it to a request. This means that the integrator can choose to ignore the field if it is not needed. This should be unproblematic, but bear this constraint in mind regarding any automation and validation tied to our Swagger files.</p>"},{"location":"api_policy/#expanding-a-response-with-an-optional-field","title":"Expanding a response with an optional field.","text":"<p>As long as a field is optional it is considered backwards compatible to add it to a response. This means that the integrator can choose to ignore the field if it is not needed. This should be unproblematic, but bear this constraint in mind regarding any automation and validation tied to our Swagger files. As well as overly strict response deserialization.</p> <p><code>Response parsing must be robust and ignore any unknown fields.</code></p>"},{"location":"api_policy/#relaxing-validation-rules","title":"Relaxing validation rules","text":"<p>For example making the required length of a string shorter. This is considered backwards compatible as long as the integrator can still send the same data as before.</p>"},{"location":"api_policy/#correcting-bugserrors-that-does-not-change-intended-behavior","title":"Correcting bugs/errors that does not change intended behavior.","text":"<p>Correcting a bug, for example correcting an incorrect/malformed error returned in an edge case, is considered backwards compatible as long as the integrator can still send the same data as before in the intended flows.</p>"},{"location":"dictionary/","title":"Dictionary","text":"<p>This dictionary includes internal, external and technical terms used in the BankAxept ecosystem. This is intended to be a general lightweight reference to reduce confusion and improve communication.</p> Term Explanation API Application Programming Interface DES Digital Enablement Service DES Digital Enablement Service. A BankAxept platform for tokenization and payments. GW Gateway HCE Hosted Card Emulation ID&amp;V Identification &amp; Verification Issuer Processor Defined as an entity processing on behalf of an Issuing Bank. In Norway this is typically TietoEvry or SDC. KIB Kontant i Butikk (Cash in Store), a BankAxept supported solution for withdrawing cash in an store. LCM Lifecycle Management OEM Original Equipment Manufacturer Wallet also referred to as xPay Wallets. PAR Payment Account Reference PCR Processor Control Record, transaction processing machine at issuer processor. As BankAxept operates cobadged with VISA it requires a specific PCR for support. POS Point of Sale SMP Secure Mobile Platform TID Trace Identifier TLS Transport Layer Security TSH Trusted Service Hub. TSM Trusted Service Manager TTL Time-To-Live TranID TransactionId, referencing the value used to verify transactions while testing. URL Uniform Resource Locator dPan Dynamic PAN (The token) fPan Funding Pan (The card) xPay A wallet from an Original Equipment Manufacturer or an operation system provider. Such as Apple Pay."},{"location":"enrolment_common_components/","title":"Card info","text":"<p>The EncryptedCardInfo is a JSON object containing the following fields; it must be sent as a Base64-encoded string of encrypted card information</p> Parameter Description Type cvv (C) Depending on the wallet provider this value may or may not be provided. In the case of InApp enrolment, this data field is not present. String-3 exp The expiry date in the format MMYY String-3 fpan The funding PAN to digitise String-3 psn (C) The Pan Sequence Number for the funding PAN to digitise String-3"},{"location":"enrolment_common_components/#card-info-encryption-guidelines","title":"Card info encryption guidelines","text":"<p>The cardInfo JSON structure is encrypted then Base64-encoded and placed in the field encryptedCardInfo. If the encryptedCardInfo is present, the encryption mechanism used is based on the Cryptographic Message.</p> <p>Syntax as specified in RFC 5652 and using the following parameters:</p> <ul> <li>The content encryption algorithm used is AES256/CBC/PKCS7 Padding.</li> <li>The key encryption algorithm is RSA with a private/public key length of 2048 bits.</li> </ul> <p>The Issuer must provide a public key certificate to be used by the DES to encrypt the symmetric keys used to protect the data fields included in the encryptedCardInfo field. The Issuer will receive the certificate to be used when sending encryptedCardInfo to BankAxept.</p> <p>BankAxept does not impose any requirements on how the issuer protects the corresponding private key,e.g. protected in an HSM, a hardware token/smart card or in a key file.</p> <p>As per EMVCo specifications, the psn is a two-digit number, but per ISO standards the psn is three digits. To accommodate this, the length has been set to up three digits.</p>"},{"location":"enrolment_epayment/","title":"Introduction - ePayment enrolment","text":"<p>To support digital BankAxept payments, a customer needs to be able to enrol their payment source. This document outlines the enrolment needed to facilitate ePayment based payment. This flow is also applicable for mono-badged use cases for NFC based solutions. Mono-badged is a solution where only BankAxept is used for payments. For co-badged NFC based use cases, see our xPays Enrolment documentation.</p>"},{"location":"enrolment_epayment/#enrolment-flow","title":"Enrolment flow","text":"<p>In the case of an ePayment flow, the end user's bank account and NNIN is gathered by an integrator. This information is then sent to the DES for processing. This must then be used to retrieve the card that will be tokenized. Once the card is deemed eligible for enrolment, the card is sent to the Issuer Processor for digitization. Finally a confirmation is sent back to the Issuer Processor from DES. The full specification of the requests and responses might be found in our OpenAPI page.</p> <p>Step 1: <code>RequestEligibleCard</code></p> <p>First a <code>RequestEligibleCard</code> request is sent to the DES to the Issuer Processor. This request intends to retrieve the card that is to be tokenized. The requests contain a bank account number and a Norwegian National Identification Number (NNIN). The response must contain an encrypted card info as described in the Card Info. The full API specification of the requests and responses can be found in the OpenAPI page.</p> <pre><code>\nsequenceDiagram\n    participant DES\n    participant IssuerService\n    DES -&gt;&gt; IssuerService: RequestEligibleCard\n    IssuerService --&gt;&gt; DES: EligibleCardResponse\n</code></pre> <p>Step 2: <code>RequestCardDigitization</code></p> <p>Once a card is deemed eligible for enrolment a <code>RequestCardDigitization</code> request is sent from the DES to the Issuer Processor. This request is used to digitize the card. The request contains information concerning:</p> <ul> <li>The card and the card capture method. (Photo, manual entry, issuer app...)</li> <li>User accepts or declines the terms and conditions.</li> <li>Risk scoring and recommendation by Wallet Provider.</li> <li>Device and wallet information.</li> </ul> <p>The issuer may then approve or decline.</p> <pre><code>\nsequenceDiagram\n    participant DES\n    participant IssuerService\n    DES -&gt;&gt; IssuerService: RequestEligibleCard\n    IssuerService --&gt;&gt; DES: EligibleCardResponse\n    DES -&gt;&gt; IssuerService: RequestCardDigitization\n    IssuerService --&gt;&gt; DES: CardDigitizationResponse\n</code></pre> <p>The response must contain a <code>decision</code>, indicating whether the card may be digitized or not. Assuming there is a <code>green</code> decision then DES will start its' tokenization process.</p> <p>Step 3: <code>DigitizationCompleteNotification</code></p> <p>Once the tokenization process is complete, the DES will send a <code>DigitizationCompleteNotification</code> to the Issuer Processor. This is to notify the Issuer Processor that the Token is generated. Inside the notification is the token and the token expiry date, as well as the result of the process.</p> <pre><code>\nsequenceDiagram\n    participant DES\n    participant IssuerService\n    DES -&gt;&gt; IssuerService: RequestEligibleCard\n    IssuerService --&gt;&gt; DES: EligibleCardResponse\n    DES -&gt;&gt; IssuerService: RequestCardDigitization\n    IssuerService --&gt;&gt; DES: CardDigitizationResponse\n    DES -&gt;&gt; IssuerService: DigitizationCompleteNotification\n    IssuerService --&gt;&gt; DES: DigitizationCompleteNotificationResponse\n</code></pre>"},{"location":"enrolment_xpays/","title":"Introduction - xPays enrolment","text":"<p>To enrol a card in xPays, the card is sent to DES for digitization by the wallet (Apple Pay etc.). The card details are gathered by the wallet and sent to the DES for processing. The DES will then send the card to the Issuer Processor for digitization.</p>"},{"location":"enrolment_xpays/#enrolment-flow","title":"Enrolment flow","text":"<p>The full specification of the requests and responses might be found in our OpenAPI page</p> <p>Step 1: <code>RequestCardDigitization</code></p> <p>Once a card is gathered by the wallet for enrolment a <code>RequestCardDigitization</code> request is sent from the DES to the Issuer Processor. This request is used to digitize the card. The request contains information concerning:</p> <ul> <li>The card and the card capture method. (Photo, manual entry, issuer app...)</li> <li>User accepts or declines the terms and conditions.</li> <li>Risk scoring and recommendation by Wallet Provider.</li> <li>Device and wallet information.</li> </ul> <p>The issuer may then approve or decline.</p> <pre><code>\nsequenceDiagram\n    participant DES\n    participant IssuerService\n    DES -&gt;&gt; IssuerService: RequestCardDigitization\n    IssuerService --&gt;&gt; DES: CardDigitizationResponse\n</code></pre> <p>The response must contain a <code>decision</code>, indicating whether the card may be digitized or not. Assuming there is a <code>green</code> decision then DES will start its' tokenization process. The card will be encrypted as described in the Card Info.</p> <p>Step 2: <code>DigitizationCompleteNotification</code></p> <p>Once the tokenization process is complete, the DES will send a <code>DigitizationCompleteNotification</code> to the Issuer Processor. This is to notify the Issuer Processor that the Token is generated. Inside the notification is the token and the token expiry date, as well as the result of the process.</p> <pre><code>\nsequenceDiagram\n    participant DES\n    participant IssuerService\n    DES -&gt;&gt; IssuerService: RequestCardDigitization\n    IssuerService --&gt;&gt; DES: CardDigitizationResponse\n    DES -&gt;&gt; IssuerService: DigitizationCompleteNotification\n    IssuerService --&gt;&gt; DES: DigitizationCompleteNotificationResponse\n</code></pre>"},{"location":"getting_started/","title":"Introduction","text":"<p>Welcome to the Getting Started guide for the BankAxept DES Issuer API.</p> <p>This text is intended to give both clear descriptions and guidance for integrators and consumers of DES. It includes an overview of all critical features as well as some general hints of how to utilize this platform.</p>"},{"location":"getting_started/#introduction","title":"Introduction","text":"<p>DES (Digital Enablement Service) Issuer API (EPP) is a Tokenization and Life Cycle Management (LCM) system delivered by BankAxept. It is passed on synchronous calls between systems, consisting of the DES Issuer API as well as an expected Issuer side API for receiving callbacks from the DES system.</p>"},{"location":"getting_started/#setting-up-your-des-integration","title":"Setting up your DES integration","text":"<p>There are multiple points of configuration that need to be aligned before you can fully utilize the DES Issuer API. The necessary steps may be found in our Onboarding Guide.</p>"},{"location":"getting_started/#integration-guidelines","title":"Integration Guidelines","text":""},{"location":"getting_started/#tid-trace-identifier","title":"TID (Trace Identifier)","text":"<p>All requests must be done using a TID. This is a unique identifier for each request, and must be included in the header of each request. We recommend using a robust UUID generator for this. For example, UUIDv4.</p>"},{"location":"getting_started/#processid","title":"ProcessId","text":"<p>Is used in enrolment. Must be provided as part of all subsequent API calls to or related to the same enrolment session.</p>"},{"location":"getting_started/#timestamps","title":"Timestamps","text":"<p>All timestamps must be in UTC and in ISO8601 format YYYY-MM-DDThh:mm:ss. We recommend using a library for this, as it is crucial not to make mistakes with timestamps.</p>"},{"location":"getting_started/#checklist-before-going-live","title":"Checklist before going live.","text":"Action point Description Set up MTLs A certificate exchange must performed and mTLS must be enabled for all endpoints Token Requestor Id To be communicated"},{"location":"getting_started/#token-states","title":"Token states.","text":"<p>Here is an overview of all the accepted state change for a token:</p> <pre><code>---\ntitle: Token State Diagram\n---\nstateDiagram-v2\n    classDef Active fill: #097969, color: white, font-weight: bold, stroke-width: 2px, stroke: black\n    classDef Deleted fill: #FF5733, color: white, font-weight: bold, stroke-width: 2px, stroke: black\n    classDef Suspended fill: #FFC300, color: white, font-weight: bold, stroke-width: 2px, stroke: black\n    Not_Tokenised --&gt; Created\n    Created --&gt; Deleted: delete\n    Created --&gt; Provisioned\n    Provisioned --&gt; Deleted: delete\n    Provisioned --&gt; Active\n    Active --&gt; Suspended: suspend\n    Active --&gt; Deleted: delete\n    Active --&gt; Active: replace\n    Suspended --&gt; Active: resume\n    Suspended --&gt; Deleted: delete\n    Suspended --&gt; Suspended: replace\n    class Active Active\n    class Deleted Deleted\n    class Suspended Suspended\n</code></pre> <p>The Card is always considered in an active state by DES, also when the card is Deleted. This is since the issuers are handling the card state while DES is only handling the token state.</p>"},{"location":"getting_started/#terminology","title":"Terminology","text":"<p>See our Dictionary for a list of terms used in the BankAxept ecosystem.</p>"},{"location":"getting_started/#response-codes","title":"Response Codes","text":"<p>The following response codes are used in the API. These might be changed or expanded in the future.</p> Response Code Description 0 Success 100-999 Wallet-related error codes 113 Unknown issuer 115 Unknown product 116 Unknown card (service code unknown etc.) 119 Unknown virtual card 221 Device or Wallet Provider not accessible after retries 322 Time to live of the operation expired 911 Operation failed 921 Unexpected server error 1000 Not found 1001 Illegal operation 1002 Card expired 1003 Card suspended 1004 Card revoked or deleted 1005 No eligible card found 1006 Card not activated 1009 Invalid change of state 1010 Invalid change of state since the token is deleted 1011 Card already exists in the DES with same PAN, card sequence number and expiry date. Only deleted tokens pointing to the card to be replaced exist in the DES. 1012 Card already exists in the DES with same PAN, card sequence number and expiry date. Active or suspended tokens pointing to the card to be replaced exist in the DES. 1013 Card already exists in the DES with the same PAN, card sequence number but different expiry date. 2000 Missing parameter 2001 Invalid format 3000 Internal error (Server error) 3001 Internal error (General error)"},{"location":"onboarding/","title":"Onboarding","text":"<p>BankAxept offers a range of services to Issuers and Merchants. This document outlines the onboarding process for these services.</p>"},{"location":"onboarding/#xpays","title":"xPays","text":"<p>In order to support xPays with BankAxept a technical configuration is required. This includes setting up your Issuing Bank values in BankAxept, and configuring your system in our TSH OEM broker (Thales).</p>"},{"location":"onboarding/#steps-to-activate","title":"Steps to activate","text":"<p>A series of steps and tests needs to be completed by multiple participants in order ensure high quality and compliance.</p> Step Explanation Participants Onboarding registration Configure profile values as defined in our Checklist section Issuing Bank (Responsible), BankAxept, Issuing Processor Onboarding Thales Setup bank in Thales Portal. Ordered by BankAxept Command Center. BankAxept (Responsible), Thales Testing Agree upon Whitelisted Pilot cards. Remember to consider PCI compliance during discussion. Bank(Responsible), BankAxept, TietoEvry Key Management Exchange keys. BankAxept(Responsible), Thales Visa Environment Configure VISA values in Prod environment. Bank(Responsible), VISA Transaction Verification Agreement with VISA - change to right PCR. Bank (Responsible), VISA, TietoEvry/Nexi Transaction Verification Replace URL in VTS. Bank(Responsible), VISA Transaction Verification Dev for Select BankAxept transactions  and Visa. Issuer Processor (Responsible), Bank Transaction Verification Establish connectivity to Thales. BankAxept (Responsible), Thales, Issuer Processor, Bank Transaction Verification Testing TranId API. BankAxept (Responsible), Thales, Issuer Processor, Bank, Apple Migrating Cards Not Applicable for all scenarios. If you wish to migrate cards you must create a list of cards and send them to Thales. Bank(Responsible), Thales, Issuer Processor, BankAxept, Apple Certification Certification setup, including payment. Bank(Responsible), Apple, Fime(?), BankAxept Non functional Requirements from Apple Not applicable for all scenarios. Only if it affects BankAxept. Bank(Responsible), BankAxept, Apple Call Center Onboard call centre. Bank(Responsible) BITS-Certification BankAxept(Responsible), Nets, Bits VISA Environment VISA VTS Setup. Bank(Responsible), VISA Launch Day Availability and testing on launch day. Bank(Responsible), Apple"},{"location":"onboarding/#setting-up-mutual-tls","title":"Setting up Mutual TLS","text":"<p>Mutual TLS must secure all communication. Only TLS1.2 or higher is supported. A secure exchange of certificates must be performed before any communication can be done.</p>"},{"location":"onboarding/#checklist","title":"Checklist","text":"<p>The following data points and checks are required to be set up in the onboarding process in order to support Apple Pay.</p> Step Explanation Registration data points Regnumber, Issuer ID and applicable VISA BIN ranges must be sent for registration Pilot cards Bank needs to coordinate which cards should be whitelisted for testing"},{"location":"tokenization/","title":"Tokenization","text":""},{"location":"tokenization/#introduction","title":"Introduction","text":"<p>DES provides digitization, tokenization, provisioning and lifecycle management of payment credentials. This is being performed on behalf of Norwegian issuers and is achieved through a connection with a Baltus Node.</p> <p>This documentation outlines the interplay between the DES Issuer API and the Issuer Processor. It does not go into depth on the ecosystem outside this relationship.</p>"},{"location":"tokenization/#xpays","title":"xPays","text":"<p>DES may be utilized for tokenization for various xPays. This enables BankAxept to tokenize on behalf of the BankAxept Issuing Banks. Below is an illustration representing the ecosystem in which DES operates.</p> <p> </p>"},{"location":"tokenization/#hce-wallets","title":"HCE wallets","text":"<p>DES may be utilized for tokenization for HCE wallets. This enables BankAxept to tokenize on behalf of the BankAxept Issuing Banks. Below is an illustration representing the ecosystem in which DES operates.</p> <p> </p>"},{"location":"tokenization/#tokenization-flow","title":"Tokenization flow","text":""},{"location":"tokenization/#full-overview","title":"Full overview","text":"<p>This is intended as an overview of the tokenization process in the ecosystem in a co-badged setting. Very rarely does a single actor need to know the full process. This is intended more of a reference for understanding the full process. Please peruse our dictionary for term explanation.</p> <p>BankAxept's role can be seen in the Auxiliary token provisioning step, note that for epp and mono-badged it is performed as seen in the EPP flow. The IGW (Issuer Gateway) is DES's service for interfacing with the Issuer Service.</p> <pre><code>sequenceDiagram\n    autonumber\n    title Scandium Provisioning Flow Green\n    box rgb(204, 204, 255) Client Device\n        participant wallet as Wallet\n    end\n    box rgb(170, 221, 238) \"Apple Server\"\n        participant broker as SMP-Broker\n        participant tsm as SMP-TSM\n    end\n    box rgb(255, 170, 170) \"Primary Partner\"\n        participant primaryBroker as ICS Broker\n        participant primaryTSM as ICS TSM\n        participant primaryTSP as ICS TSP\n    end\n    box rgb(255, 170, 202) \"Auxiliary Partner\"\n        participant auxBroker as Thales Broker\n        participant auxTSM as Thales TSM\n        participant auxTSP as BankAxept TSP\n        participant auxIGW as BankAxept IGW\n    end\n    box rgb(188, 255, 194) \"Issuer\"\n        participant issuerGtw as Issuer Service\n        participant issuer as Issuing Bank\n    end\n\n    note over wallet: User opens Wallet and taps&lt;br/&gt; + selects provisioning option and &lt;br/&gt; enters basic card data via camera or manual entry\n    Note over wallet, issuer: Eligibility Check\n    wallet -&gt;&gt; broker: Eligibility Check\n    broker -&gt;&gt; primaryBroker: NetworkCheckCard\n    primaryBroker -&gt;&gt; issuerGtw: VerifyAccount\n    issuerGtw -&gt;&gt; issuer: Eligibility Check\n    Note over issuer: Account status check\n    issuer --&gt;&gt; issuerGtw: EligibilityCheck response\n    issuerGtw --&gt;&gt; primaryBroker: VerifyAccount response\n    primaryBroker --&gt;&gt; broker: NetworkCheckCard response\n    broker --&gt;&gt; wallet: EligibilityCheck response\n    Note over wallet, issuer: Primary Token Provisioning\n    wallet -&gt;&gt; broker: EnableCard\n    broker -&gt;&gt; primaryBroker: Link&amp;Provision\n    primaryBroker -&gt;&gt; issuerGtw: AuthoriseProvisioning(green recommendation)\n    issuerGtw -&gt;&gt; issuer: Approve Provisioning\n    Note over issuer: Fraud processing\n    issuer --&gt;&gt; issuerGtw: Approve Provisioning Response\n    issuerGtw --&gt;&gt; primaryBroker: AuthoriseProvisioning(green) Response\n    Note over primaryTSM: Internal create token and person requests\n    primaryBroker --&gt;&gt; broker: Link&amp;Provision response\n    broker --&gt;&gt; wallet: EnableCard response\n    Note over wallet: Primary Token &lt;br/&gt; inactive in Wallet\n    Note over wallet: Primary partner then&lt;br/&gt; delivers and applies &lt;br/&gt; perso script to SE\n    Note over wallet, issuer: Auxiliary Token Provisioning\n    broker -&gt;&gt; auxBroker: createToken\n    auxBroker -&gt;&gt; auxIGW: requestCoBadgeDigitization &lt;br/&gt;- encrypted VISA\n    auxIGW -&gt;&gt; issuerGtw: requestCoBadgeDigitization &lt;br/&gt;- encrypted VISA\n    issuerGtw --&gt;&gt; auxIGW: - encryptedCardInfo &lt;br/&gt;- encrypted BankAxept\n    auxIGW --&gt;&gt; auxBroker: requestCoBadgeDigitization Response &lt;br/&gt;- BankAxept PAN++\n    auxBroker -&gt;&gt; auxTSP: createToken\n    auxTSP --&gt;&gt; auxBroker: createToken Response\n    auxBroker --&gt;&gt; broker: createToken Response\n    auxTSP -&gt;&gt; auxBroker: submitTokenData\n    auxBroker --&gt;&gt; auxTSP: submitTokenData Response\n    Note over auxBroker: Create perso script\n    broker -&gt;&gt; tsm: activateSecondaryToken\n    Note over auxBroker: Handle perso script\n    auxBroker -&gt;&gt; auxTSP: updateTokenState &lt;br/&gt;- ACTIVE\n    Note over auxTSP: Activate token\n    auxTSP --&gt;&gt; auxBroker: updateTokenState Response\n    auxBroker -&gt;&gt; auxIGW: notifyVirtualCardChange\n    auxIGW -&gt;&gt; issuerGtw: digitizationCompleteNotification\n    issuerGtw --&gt;&gt; auxIGW: digitizationCompleteNotification Response\n    auxIGW --&gt;&gt; auxBroker: notifyVirtualCardChange Response\n    Note over wallet, issuer: Activation Steps\n    tsm -&gt;&gt; wallet: Deliver perso script\n    Note over wallet: Applies Auxiliary perso script to SE\n    wallet -&gt;&gt; tsm: Return perso script results\n    primaryBroker -&gt;&gt; issuerGtw: notify provisioning result\n    issuerGtw --&gt;&gt; primaryBroker: Request\n    issuerGtw -&gt;&gt; issuer: notify provisioning result\n    issuer --&gt;&gt; issuerGtw: Request\n    Note over broker: Update pass details\n    broker -&gt;&gt; wallet: Activate Pass\n    Note over wallet: Pass Active\n\n\n</code></pre>"},{"location":"tokenization/#xpay-flow","title":"xPay Flow","text":"<p>See the dedicated section for more information here. Once an entity(xPay etc.) has started a tokenization process, the following flow is expected between the Issuer Processor and DES.</p> <pre><code>\nsequenceDiagram\n    participant DES\n    participant IssuerService\n    DES -&gt;&gt; IssuerService: RequestCardDigitization\n    IssuerService --&gt;&gt; DES: CardDigitizationResponse\n    DES -&gt;&gt; IssuerService: DigitizationCompleteNotification\n    IssuerService --&gt;&gt; DES: DigitizationCompleteNotificationResponse\n</code></pre>"},{"location":"tokenization/#epp-flow","title":"EPP flow","text":"<p>See the dedicated section for more information here. Once an entity(ePayment integrator etc.) has started a tokenization process, the following flow is expected between the Issuer Processor and DES.</p> <pre><code>\nsequenceDiagram\n    participant DES\n    participant IssuerService\n    DES -&gt;&gt; IssuerService: RequestEligibleCard\n    IssuerService --&gt;&gt; DES: EligibleCardResponse\n    DES -&gt;&gt; IssuerService: RequestCardDigitization\n    IssuerService --&gt;&gt; DES: CardDigitizationResponse\n    DES -&gt;&gt; IssuerService: DigitizationCompleteNotification\n    IssuerService --&gt;&gt; DES: DigitizationCompleteNotificationResponse\n</code></pre>"},{"location":"swagger/messages-from-issuer-api/","title":"BankAxept DES Issuer API - DES Side","text":""},{"location":"swagger/messages-to-issuer-api/","title":"BankAxept DES Issuer API - Issuer Service Side","text":""}]}