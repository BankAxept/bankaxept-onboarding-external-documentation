openapi: 3.0.0
info:
  title: Onboarding API
  description: API
  version: 1.0.0

servers:
  - url: https://onboarding.bankaxept.no/psp
    description: Production server
  - url: https://onboarding-test.baxlab.no/psp
    description: Test server
paths:
  /v2/register/merchantAgreement:
    put:
      summary: Register a new agreement on a customer
      description: Register a new agreement on a new customer or existing customer
      operationId: registerAgreement
      tags:
        - registerAgreement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterBaxRequest"
      responses:
        202:
          description: Request to register a new agreement on a customer is accepted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterBaxResponse"
        400:
          $ref: "#/components/responses/badRequest"
        401:
          $ref: "#/components/responses/unauthorized"
        403:
          $ref: "#/components/responses/forbidden"
        500:
          $ref: "#/components/responses/internalServerError"
  /v2/register/{orderId}:
    parameters:
      - $ref: "#/components/parameters/orderIdInPath"
    get:
      summary: Get registered agreement
      description: Get registered agreement
      operationId: getRegisteredAgreement
      tags:
        - registerAgreement
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisteredAgreementResponse"
        400:
          $ref: "#/components/responses/badRequest"
        401:
          $ref: "#/components/responses/unauthorized"
        403:
          $ref: "#/components/responses/forbidden"
        404:
          $ref: "#/components/responses/notFound"
        500:
          $ref: "#/components/responses/internalServerError"
  /v2/agreement/org/{orderId}/resend-signing-email:
    parameters:
      - $ref: "#/components/parameters/orderIdInPath"
    post:
      summary: Resend signing email
      description: Resend signing email
      operationId: resendSigningEmail
      tags:
        - agreement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResendSigningEmailRequest"
      responses:
        202:
          description: Request to resend signing email is accepted
        400:
          $ref: "#/components/responses/badRequest"
        401:
          $ref: "#/components/responses/unauthorized"
        403:
          $ref: "#/components/responses/forbidden"
        500:
          $ref: "#/components/responses/internalServerError"
  /v2/agreement/awaiting-signature:
    get:
      summary: Get all agreements waiting for signature(s)
      description: Get all agreements waiting for signature(s)
      operationId: getWaitingForSignature
      tags:
        - agreement
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BaxWaitingForSignatureResponse"
        401:
          $ref: "#/components/responses/unauthorized"
        403:
          $ref: "#/components/responses/forbidden"
        500:
          $ref: "#/components/responses/internalServerError"
  /v2/simulate/sign:
    post:
      summary: Simulate signing for all signees
      description: Simulate signing for all signees
      operationId: simulateUserSign
      tags:
        - simulation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SimulateSignature"
      responses:
        202:
          description: Accepted
        401:
          $ref: "#/components/responses/unauthorized"
        403:
          $ref: "#/components/responses/forbidden"
        404:
          $ref: "#/components/responses/notFound"
        500:
          $ref: "#/components/responses/internalServerError"
  /v2/simulate/bank/approve/signatures:
    post:
      summary: Simulate manual approval by the bank of signatures that have failed automatic validation
      description: This endpoint will simulate what will happen if the automatic validation of signatures fails using BRREG, the signed agreement is then sent to the
        bank for manual approval, and the bank manually approves the signatures within the given time frame.
      operationId: simulateBankApproveSignatures
      tags:
        - simulation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Simulate"
      responses:
        202:
          description: Accepted
        401:
          $ref: "#/components/responses/unauthorized"
        403:
          $ref: "#/components/responses/forbidden"
        404:
          $ref: "#/components/responses/notFound"
        500:
          $ref: "#/components/responses/internalServerError"
  /v2/simulate/bank/reject/signatures:
    post:
      summary: Simulate manual rejection by the bank of signatures that have failed automatic validation
      description: This endpoint will simulate what will happen if the automatic validation if signatures fails using BRREG, the signed agreement is then sent to the
        bank for manual approval, and the bank manually rejects the signatures within the given time frame.
      operationId: simulateBankRejectSignatures
      tags:
        - simulation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Simulate"
      responses:
        202:
          description: Accepted
        401:
          $ref: "#/components/responses/unauthorized"
        403:
          $ref: "#/components/responses/forbidden"
        404:
          $ref: "#/components/responses/notFound"
        500:
          $ref: "#/components/responses/internalServerError"
  /v2/simulate/bypass-validation:
    put:
      summary: Activate or deactivate bypass validation mode to bypass validation and make testing easier
      description: Activate or deactivate bypass validation mode to bypass validation and make testing easier.
        This call is idempotent and will ensure that the mode is set to the desired value. The value provided will also apply to
        the user until a different value is provided.
      operationId: bypassValidationMode
      tags:
        - simulation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BypassValidation"
      responses:
        200:
          description: Ok
        400:
          $ref: "#/components/responses/badRequest"
        401:
          $ref: "#/components/responses/unauthorized"
        403:
          $ref: "#/components/responses/forbidden"
        500:
          $ref: "#/components/responses/internalServerError"
components:
  parameters:
    orgNumberInPath:
      name: orgNumber
      in: path
      required: true
      description: Organisation number
      schema:
        type: string
        example: 123456789
        pattern: '^\d{9}$'
    orderIdInPath:
      name: orderId
      in: path
      required: true
      description: An identifier used to distinguish a specific order in BankAxept's system
      schema:
        type: string
        format: uuid
        example: 123e4567-e89b-12d3-a456-426614174000
  responses:
    internalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    unauthorized:
      description: Could not validate JWT
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    badRequest:
      description: Validation or KAR check failed
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    notFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
  schemas:
    RegisterBaxRequest:
      type: object
      required:
        - messageId
        - merchantInfo
        - contact
        - registerServiceInfo
      properties:
        messageId:
          type: string
          format: uuid
          description: Unique identifier for message idempotency
          example: 123e4567-e89b-12d3-a456-426614174000
        merchantInfo:
          $ref: "#/components/schemas/MerchantInfo"
        contact:
          $ref: "#/components/schemas/Contact"
        signees:
          type: array
          items:
            $ref: "#/components/schemas/Contact"
          description: List of signees. It is optional and defaults to contact person.
            The specified signee(s) must either have signature rights in BRREG or have power attorney for those with signature rights in BRREG.
            The specified signee(s) must be able to sign documents if required using BankID. Nordic signing and manual signatures are not supported. If any of the signees is incorrect, all signees will need to re-sign the document.
            This will override the signees on all bax registration requests with the same settlement account that have been submitted
            but not yet processed.
          default: [ ]
        registerServiceInfo:
          $ref: "#/components/schemas/RegisterServiceInfo"
        webhookUrl:
          type: string
          description: The (optional) webhook URL where you want us to call whenever there has been an update to the agreement order.
            The call made by us will be a POST call, and have the `orderId` in the request body.
          example: "https://example.org/bax_webhook"
    RegisterBaxResponse:
      type: object
      required:
        - orderId
      properties:
        orderId:
          $ref: "#/components/schemas/OrderId"
    MerchantInfo:
      type: object
      required:
        - name
        - orgNumber
        - businessAddress
      properties:
        name:
          type: string
          description: Name of the merchant
        orgNumber:
          $ref: "#/components/schemas/OrgNumber"
        mcc:
          $ref: "#/components/schemas/Mcc"
        businessAddress:
          $ref: "#/components/schemas/Address"
        postalAddress:
          $ref: "#/components/schemas/Address"
    SimulateSignature:
      type: object
      required:
        - orderId
        - signees
      properties:
        orderId:
          $ref: "#/components/schemas/OrderId"
        signees:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/SimulatedSignee"
    SimulatedSignee:
      type: object
      required:
        - email
        - fullName
        - dateOfBirth
      properties:
        fullName:
          type: string
          description: Full name of the signee
        dateOfBirth:
          type: string
          format: date
          description: Date of birth of the signee
        email:
          type: string
          format: email
          description: Email address of the signee, used to identify a signer from the order keep in mind theres no unique constraint.
    Simulate:
      type: object
      required:
        - orderId
      properties:
        orderId:
          $ref: "#/components/schemas/OrderId"
    BypassValidation:
      type: object
      required:
        - accountOwnership
      properties:
        accountOwnership:
          type: boolean
          description: Turn on or off the ability to bypass account ownership validation
    OrgNumber:
      type: string
      example: 123456789
      description: Organisation number
      pattern: '^\d{9}$'
    AccountForSettlement:
      type: string
      description: Settlement account number
      pattern: '^\d{11}$'
      example: 12345678901
    returnOfGoods:
      type: object
      description: Parameter which contains order information for the return of goods product.
      required:
        - orderReturnOfGoods
      properties:
        orderReturnOfGoods:
          type: boolean
          default: false
          description: Toggle whether bax should have return of goods on BankAxept or not.
        returnWindow:
          description: The number of days in which a good can be returned after sale. Return window of 180 or 365 days must be clarified with BankAxept in advance.
          default: 30
          enum:
            - 30
            - 60
            - 90
            - 180
            - 365
    Contact:
      description: Contact person
      type: object
      required:
        - contactName
        - contactEmail
        - contactPhone
      properties:
        contactName:
          type: string
          description: Name of the contact person
        contactEmail:
          type: string
          format: email
          description: Email address of the contact person
        contactPhone:
          type: string
          description: Phone number of the contact person
    RegisterServiceInfo:
      type: object
      required:
        - accountForSettlement
        - returnOfGoods
      properties:
        accountForSettlement:
          $ref: "#/components/schemas/AccountForSettlement"
        accountForBankCharges:
          type: string
          description: Account for bank charges. Should be included if it is different from the settlement account.
          pattern: '^\d{11}$'
          example: 12345678901
        returnOfGoods:
          $ref: "#/components/schemas/returnOfGoods"
    Address:
      type: object
      required:
        - street1
        - postalCode
        - city
      properties:
        street1:
          type: string
          description: First line of the street address
        street2:
          type: string
          description: Second line of the street address (optional)
        postalCode:
          type: string
          description: postal code
        city:
          type: string
          description: City
        country:
          type: string
          description: ISO 3166-1 alpha-2 country code, defaults to Norway
          example: 'NO'
          default: 'NO'
        co:
          type: string
          description: Care of (c/o) address (optional)
    RegisteredAgreementResponse:
      type: object
      required:
        - orgNumber
        - merchantName
        - orderId
        - registerMerchantOrderStatus
      properties:
        orgNumber:
          $ref: "#/components/schemas/OrgNumber"
        baxNumber:
          $ref: "#/components/schemas/BaxNumber"
        merchantName:
          $ref: "#/components/schemas/MerchantName"
        orderId:
          $ref: "#/components/schemas/OrderId"
        registerMerchantOrderStatus:
          type: string
          description: Status of the order
          enum:
            - BAX_NOT_CREATED
            - NOT_SIGNED
            - SIGNED_AWAITING_BANK
            - BAX_ACTIVE
            - REJECTED
    OrderId:
      type: string
      format: uuid
      description: An identifier used to distinguish a specific order in BankAxept's system
    MerchantName:
      type: string
      description: Name of the merchant
      example: Merchant
    BaxNumber:
      type: string
      description: An identifier used to distinguish a specific merchant agreement across BankAxept and Nets' systems
      example: 123456
    Mcc:
      description: Merchant Category Code
      type: string
      pattern: '^\d{4}$'
    ResendSigningEmailRequest:
      type: object
      required:
        - signees
      properties:
        signees:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/Contact"
          description: |
            List of signees. The specified signee(s) must either have signature rights in BRREG or have power of attorney for those with signature rights in BRREG.
            The specified signee(s) must be able to sign documents using BankID. Nordic signing and manual signatures are not supported. If any of the signees are incorrect, all signees will need to re-sign the document.
            This will override the signees on all bax registration requests with the same settlement account that have been submitted
            but not yet processed.
    BaxWaitingForSignatureResponse:
      type: object
      required:
        - orgNumber
        - baxNumber
        - merchantName
        - orderId
        - signeeStatuses
      properties:
        orgNumber:
          $ref: "#/components/schemas/OrgNumber"
        baxNumber:
          $ref: "#/components/schemas/BaxNumber"
        merchantName:
          $ref: "#/components/schemas/MerchantName"
        orderId:
          $ref: "#/components/schemas/OrderId"
        signeeStatuses:
          type: array
          items:
            $ref: "#/components/schemas/SigneeStatus"
    SigneeStatus:
      type: object
      required:
        - fullName
        - email
        - hasSigned
      properties:
        fullName:
          type: string
          description: Full name of the signee
        email:
          type: string
          format: email
          description: Email address of the signee
        hasSigned:
          type: boolean
          description: Indicates if the signee has signed the agreement
    ErrorResponse:
      type: object
      required:
        - message
        - httpStatusCode
        - correlationId
      properties:
        message:
          type: string
          example: Validation or KAR check failed
        httpStatusCode:
          type: integer
          example: 400
        correlationId:
          type: string
          nullable: true
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
